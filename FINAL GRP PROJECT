# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""
#Initials included for reference to who wrote specific sections of the code throughout script
#SI =  Soumya Iyer (2510028)
#SP = Sophie Perry (2498172)
#EP = Emily Paterson (2511333)

#tkinter is the library used to create a graphical user interface for the quiz

import tkinter as tk

from tkinter import ttk

from tkinter import *

import tkinter.font as font


class App(tk.Tk):
  '''class that holds all of the code for the app together'''  

  def __init__(self):
#initializes the classes attribute of self  in order to  have a way to link the rest of the code to the class      
      super().__init__()
      self.button_states = {}
# root

      self.geometry('1300x800')
      self.title('Christmas Quiz!!!')
      self.widgets = {}

#assigns geometry and a title to the app  

      self.notebook = ttk.Notebook(self)
      self.notebook.pack(pady=10, expand=True)

# creates a notebook and assigns it to the class (SP)(Adapted from https://www.pythontutorial.net/tkinter/tkinter-notebook/)

      self.frame1 = Frame(self.notebook, width=1300, height=680)
      self.frame2 = Frame(self.notebook, width=1300, height=680, bg='#F08080')
      self.frame3 = Frame(self.notebook, width=1300, height=680, bg='#9BCD9B')
      self.frame4 = Frame(self.notebook, width=1300, height=680, bg='#F08080')
      self.frame5 = Frame(self.notebook, width=1300, height=680, bg='#9BCD9B')
      self.frame6 = Frame(self.notebook, width=1300, height=680, bg='#F08080')
      self.frame7 = Frame(self.notebook, width=1300, height=680, bg='#9BCD9B')
      self.frame8 = Frame(self.notebook, width=1300, height=680, bg='#F08080')
      self.frame9 = Frame(self.notebook, width=1300, height=680, bg='#9BCD9B')

# creates frames and links them to the notebook (SP)

      self.notebook.add(self.frame1, text='Welcome to the Quiz')
      self.notebook.add(self.frame2, text='Question 1')
      self.notebook.add(self.frame3, text='Question 2')
      self.notebook.add(self.frame4, text='Question 3')
      self.notebook.add(self.frame5, text='Question 4')
      self.notebook.add(self.frame6, text='Question 5')
      self.notebook.add(self.frame7, text='Question 6')
      self.notebook.add(self.frame8, text='Question 7')
      self.notebook.add(self.frame9, text='Question 8')
     
# adds the frames to notebook and the text that appears on each tab to click between the frames (SP)
# Creating and styling the home page

      self.label = ttk.Label(self.frame1, text='What Christmas Character Are you?')

      self.label.config(font=('times new roman',25))

      self.label.pack()

# adds a label to the first frame (SP), This same concept of adding a label is carried out through the rest of the code
 
      self.label = Label(self.frame1, text='Go to Question 1 ^', bg='#FF0000')

      self.label.config(font=('times new roman',15))

 

      self.label.pack()
     


 #Code used for displaying all images was adapted from (https://www.geeksforgeeks.org/how-to-use-images-as-backgrounds-in-tkinter/) (EP)
      self.bg = PhotoImage(file = r"C:\Users\2498172\OneDrive - University of Dundee\Desktop\chris-pic.png")   # an image is uploaded to the GIT repositry to be dowloaded by the user for use,  this image is set as the background of the welcome page (EP)
      self.canvas1 = Canvas(self.frame1, width = 1200,height = 631)  # width and height control the images dimensions, these values were chosen ensure that the image fit the app window correctly (EP)
      self.canvas1.pack(fill = "both", expand = True) # fill and expand allow the image to fit the app window, this shown by the commands of true and both (EP)


 #displays the image

      self.canvas1.create_image( 0, 0, image = self.bg,anchor = "nw")


      self.label = ttk.Label(self.frame1, text='To play this quiz, click the button of your answer to the question and press submit when finished!')
      self.label.config(font=('times new roman',15))
      self.label.pack()
     
#Question 1
      self.label = Label(self.frame2, text='What is your favourite season?', bg='#F08080')
      self.label.config(font=('times new roman',25))                
      self.label.pack()


      f = font.Font(family='impact', size=20) #creating a standardised font style to use throughout the function (SI)
      S = font.Font(family='times new roman', size=15)

 
      finaltotal=[] #using a list to track the answers to get a sum that helps reveal the final answer/character of the quiz (SI)

      total=0

#function(SI)
      def season(value):
         
          '''function where the chosen button(season) is assigned a numerical value to allow addition through the use of abovementioned list'''
       
          if value == 'summer':  
            self.notebook.select(self.frame3)
            total=1
          elif value == 'autumn':
             self.notebook.select(self.frame3) 
             total =2
          elif value == 'spring':
             self.notebook.select(self.frame3)
             total=3
          elif value== 'winter':
             self.notebook.select(self.frame3)
             total=4
          else:
            total=0

          v=total

   

          finaltotal.append(v)
   

  #Answer options in the form of button widgets assigned to the right frame of the notebook (SP) (adapted from exampleApp.py) , this same concept is continued for the rest of the questions and buttons throughout the rest of the code

      self.widgets['MyButton'] = Button(self.frame2, text='Summer', bg='#EEAEEE', height=3, width=14, command=lambda:season('summer')) #use of lambda function to assign specfic value from the function to the button choice (SI)
      self.widgets['MyButton']['font']= f #custom font style that is initialised above (SI)
      self.widgets['MyButton'].pack(padx=10,pady=10) #helps with the spacing of the buttons (SI)

 # these stylistic techniques are applied for all the buttons and are consistent throughout the code (SI)

      self.widgets['MyButton'] = Button(self.frame2, text='Autumn', bg='#FF4040', height=3, width=14, command=lambda:season('autumn'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame2, text='Spring', bg='#8EE5EE',height=3, width=14, command=lambda:season('spring'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] =Button(self.frame2, text='Winter', bg='#FFD700', height=3, width=14,command=lambda:season('winter') )
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)
      
      
      
 

#Question 2

      self.label = Label(self.frame3, text='What is your favourite Christmas food?' ,bg='#9BCD9B')
      self.label.config(font=('times new roman',25)) #config allows for improving the appearance of the app
      self.label.pack()

 
      finaltotal=[]

      total=0
 

 
#function(SI)
      def food(value):
          '''function where the chosen button(food) is assigned a numerical value to allow addition through the use of abovementioned list'''

          if value == 'brussel sprouts':
              self.notebook.select(self.frame4)
              total=1

          elif value == 'yule log':
              self.notebook.select(self.frame4)
              total =2

          elif value=='turkey':
              self.notebook.select(self.frame4)
              total=3

          elif value == 'roast potatoes':
              self.notebook.select(self.frame4)
              total=4

          else:
              total=0
          v=total

          finaltotal.append(v)

      self.widgets['MyButton'] = Button(self.frame3, text='Brussel sprouts', bg='#FFD700', height=3, width=14, command=lambda:food('brussel sprouts') )
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)
 


      self.widgets['MyButton'] = Button(self.frame3, text='Turkey', bg='#8EE5EE',height=3, width=14, command=lambda:food('turkey'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame3, text='Yule log',bg='#FF4040', height=3, width=14, command=lambda:food('yule log'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame3, text='Roast potatoes',bg='#EEAEEE', height=3, width=14,command=lambda:food('roast potatoes'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 
#Question 3
      self.label = Label(self.frame4, text='What is your favourite Amino Acid?', bg='#F08080')
      self.label.config(font=('times new roman',25))
      self.label.pack()


      finaltotal=[]

      total=0

#function(SI)
      def amino(value):

          '''function where the chosen button(amino acid) is assigned a numerical value to allow addition through the use of abovementioned list'''
         
          if value == 'glutamate':
            self.notebook.select(self.frame5)
            total=1

          elif value == 'leucine':
            self.notebook.select(self.frame5)
            total =2

          elif value=='histidine':
            self.notebook.select(self.frame5)
            total=3

          elif value == 'glutamine':
            self.notebook.select(self.frame5)
            total=4

          else:

            total=0


          v=total
          finaltotal.append(v)

 

      self.widgets['MyButton'] = Button(self.frame4, text='Glutamate', bg='#8EE5EE',height=3, width=14, command=lambda:amino('glutamate'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame4, text='Leucine',bg='#FF4040', height=3, width=14, command=lambda:amino('leucine'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame4, text='Histidine',bg='#EEAEEE', height=3, width=14, command=lambda:amino('histidine'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame4, text='Glutamine', bg='#FFD700', height=3, width=14, command=lambda:amino('glutamine'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 
#Question 4
      self.label = Label(self.frame5, text='Who is your favourite artist?' ,bg='#9BCD9B')
      self.label.config(font=('times new roman',25))
      self.label.pack()

 
      finaltotal=[]
      total=0


#function(SI)
      def artist(value):
         
          '''function where the chosen button(musician) is assigned a numerical value to allow addition through the use of abovementioned list'''
         
          if value == 'frank sinatra':
             self.notebook.select(self.frame6)
             total= 1

          elif value == 'michael buble':
             self.notebook.select(self.frame6)
             total = 2

          elif value == 'sia':
             self.notebook.select(self.frame6)
             total=3

          elif value == 'ariana grande':
             self.notebook.select(self.frame6)
             total=4

          else:

             total=0

          v=total

          finaltotal.append(v)

     


      self.widgets['MyButton'] = Button(self.frame5, text='Frank sinatra',bg='#FF4040', height=3, width=14,command=lambda:artist('frank sinatra'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame5, text='Michael buble',bg='#EEAEEE', height=3, width=14,command=lambda:artist('michael buble'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame5, text='Sia', bg='#FFD700', height=3, width=14, command=lambda:artist('sia'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

   

      self.widgets['MyButton'] = Button(self.frame5, text='Ariana grande', bg='#8EE5EE',height=3, width=14,command=lambda:artist('ariana grande'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 
#Question 5
      self.label = Label(self.frame6, text='What is your favourite Christmas film?', bg='#F08080')
      self.label.config(font=('times new roman',25))
      self.label.pack()

 

      finaltotal=[]

      total=0

#function(SI)
      def film(value):
         
          '''function where the chosen button(christmas movie) is assigned a numerical value to allow addition through the use of abovementioned list'''
 
          if value == 'Elf':
              self.notebook.select(self.frame7)
              total=1

          elif value == 'home alone':
               self.notebook.select(self.frame7)
               total = 2

          elif value == 'nativity':
              self.notebook.select(self.frame7)
              total=3

          elif value =='the grinch':
               self.notebook.select(self.frame7)
               total=4

          else:

               total=0

     
      v=total
      finaltotal.append(v)


      self.widgets['MyButton'] = Button(self.frame6, text='Elf',bg='#EEAEEE', height=3, width=14,command=lambda:film('Elf'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame6, text='Home alone', bg='#FFD700', height=3, width=14,command=lambda:film('home alone'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)



      self.widgets['MyButton'] = Button(self.frame6, text='Nativity', bg='#8EE5EE',height=3, width=14,command=lambda:film('nativity'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 
 
      self.widgets['MyButton'] = Button(self.frame6, text='The grinch',bg='#FF4040', height=3, width=14,command=lambda:film('the grinch'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 
#Question 6
      self.label = Label(self.frame7, text='What is your favourite coding language?' ,bg='#9BCD9B')
      self.label.config(font=('times new roman',25))
      self.label.pack()

 
      finaltotal=[]

      total=0

#function(SI)
      def lang(value):
         
          '''function where the chosen button(programming language) is assigned a numerical value to allow addition through the use of abovementioned list'''

          if value == 'C--':
             self.notebook.select(self.frame8)
             total= 1

          elif value == 'R studio':
             self.notebook.select(self.frame8)
             total = 2

          elif value == 'python':
             self.notebook.select(self.frame8)
             total=3

          elif value == 'C++':
             self.notebook.select(self.frame8)
             total=4

          else:
             total=0

          v=total
          finaltotal.append(v)

   
      self.widgets['MyButton'] = Button(self.frame7, text='C--', bg='#FFD700', height=3, width=14,command=lambda:lang('C--'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame7, text='R studio', bg='#8EE5EE',height=3, width=14,command=lambda:lang('R studio'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame7, text='Python',bg='#FF4040', height=3, width=14,command=lambda:lang('python'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame7, text='C++',bg='#EEAEEE', height=3, width=14,command=lambda:lang('C++'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 
#Question 7
      self.label = Label(self.frame8, text='Which of these gifts would you give someone for Christmas?', bg='#F08080')
      self.label.config(font=('times new roman',25))
      self.label.pack()

 
      finaltotal=[]

      total=0

#function(SI)
      def gift(value):
         
          '''function where the chosen button(gift choice) is assigned a numerical value to allow addition through the use of abovementioned list'''
       
          if value == 'coal':
            self.notebook.select(self.frame9)
            total= 1
          elif value == 'toys':
             self.notebook.select(self.frame9)
             total = 2
          elif value== 'candles':
             self.notebook.select(self.frame9)
             total= 3
          elif value == 'socks':
             self.notebook.select(self.frame9)
             total= 4
          else:
            total=0

   
          v=total


          finaltotal.append(v)

      self.widgets['MyButton'] = Button(self.frame8, text='Toys', bg='#8EE5EE',height=3, width=14,command=lambda:gift('toys'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)


      self.widgets['MyButton'] = Button(self.frame8, text='Coal',bg='#FF4040', height=3, width=14,command=lambda:gift('coal'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 


      self.widgets['MyButton'] = Button(self.frame8, text='Candles',bg='#EEAEEE', height=3, width=14,command=lambda:gift('candles'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame8, text='Socks', bg='#FFD700', height=3, width=14,command=lambda:gift('socks'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

#Question 8
      self.label = Label(self.frame9, text='What is your favourite part of Christmas?',bg='#9BCD9B')
      self.label.config(font=('times new roman',25))
      self.label.pack()

 


      finaltotal=[]
      total=0
     
#function(SI)
      def fav(value):
         
         '''function where the chosen button(favourite thing about christmas) is assigned a numerical value to allow addition through the use of abovementioned list'''

         if value == 'movies':

          total=1

         elif value == 'family':
           total = 2

         elif value == 'food':

          total= 3

         elif value == 'gifts':

          total =4

         else:

              total=0

         v=total

         finaltotal.append(v)

      def final(total):

          print("Sum of all the elements in the list is:", sum(finaltotal)) #allows user to keep track and check if their answers are correct (SI)


          answer=sum(finaltotal) #uses the sum function to add up all the numerical values gathered in the list through buttons (SI)

          if 8<=answer<=12: #use of conditionals to check if the answers match the following character(SI)
             
             self.frame10 = Frame(self.notebook, width=1300, height=800, bg='#9BCD9B') #creation of new frame based on whether the condition is satisfied
             self.notebook.add(self.frame10, text='Your Character') #Adds new frame to the notebook and the label of the tab
             self.label = Label(self.frame10, text='You are the Grinch!',bg='#9BCD9B')
             self.label.config(font=('Segoe script',25,'bold'))
             self.label.pack()
             self.bg = PhotoImage(file = r"C:\Users\2498172\OneDrive - University of Dundee\Second Year\programming\final grinch.png") # an image is uploaded to the GIT repositry to be dowloaded by the user for use (EP)

             self.canvas1 = Canvas(self.frame10, width = 1100,height = 700) # dimensions were set to ensure that the image fit and was displayed in the correct place, this copied for the following images (EP)
             self.canvas1.pack(fill = "none", expand = True)
             self.canvas1.create_image( 0, 0, image = self.bg,anchor = "nw")
           

          elif 13<=answer<=16:  #use of conditionals to check if the answers match the following character


              self.frame11 = Frame(self.notebook, width=1300, height=800, bg='#9BCD9B') #creation of new frame based on whether the condition is satisfied
              self.notebook.add(self.frame11, text='Your Character') #Adds new frame to the notebook and the label of the tab
              self.label = Label(self.frame11, text='You are Rudolph!',bg='#9BCD9B')  
              self.label.config(font=('Segoe script',25,'bold'))
              self.label.pack()
              self.bg = PhotoImage(file = r"C:\Users\2498172\OneDrive - University of Dundee\Second Year\programming\final rudy.png")

              self.canvas1 = Canvas(self.frame11, width = 1100,height = 700)
              self.canvas1.pack( fill = "none", expand = False)
              self.canvas1.create_image( 0, 0, image = self.bg,anchor = "nw")
        

           
          elif 17<=answer<=20:  #use of conditionals to check if the answers match the following character

               self.frame12 = Frame(self.notebook, width=1300, height=800, bg='#9BCD9B') #creation of new frame based on whether the condition is satisfied
               self.notebook.add(self.frame12, text='Your Character') #Adds new frame to the notebook and the label of the tab
               self.label = Label(self.frame12, text='You are Santa!',bg='#9BCD9B')
               self.label.config(font=('Segoe script',25,'bold'))
               self.label.pack()
               self.bg = PhotoImage(file = r"C:\Users\2498172\OneDrive - University of Dundee\Second Year\programming\final santa.png")

               self.canvas1 = Canvas(self.frame12, width = 1100,height = 700)
               self.canvas1.pack(fill = "none", expand = False)
               self.canvas1.create_image( 0, 0, image = self.bg,anchor = "nw")
           


          elif 21<=answer<=24:  #use of conditionals to check if the answers match the following character

              self.frame13 = Frame(self.notebook, width=1300, height=800, bg='#9BCD9B')  #creation of new frame based on whether the condition is satisfied
              self.notebook.add(self.frame13, text='Your Character') #Adds new frame to the notebook and the label of the tab
              self.label = Label(self.frame13, text='You are Buddy the Elf!',bg='#9BCD9B')
              self.label.config(font=('Segoe script',25,'bold'))
              self.label.pack()
              self.bg = PhotoImage(file = r"C:\Users\2498172\OneDrive - University of Dundee\Second Year\programming\final buddy.png")

              self.canvas1 = Canvas(self.frame13, width = 1100,height = 700)
              self.canvas1.pack(fill = "none", expand = True)
              self.canvas1.create_image( 0, 0, image = self.bg,anchor = "nw")
             

           
          elif 25<=answer<=28:  #use of conditionals to check if the answers match the following character


              self.frame14 = Frame(self.notebook, width=1300, height=800, bg='#9BCD9B')  #creation of new frame based on whether the condition is satisfied
              self.notebook.add(self.frame14, text='Your Character') #Adds new frame to the notebook and the label of the tab
              self.label = Label(self.frame14, text='You are Kevin McAllistar!',bg='#9BCD9B')
              self.label.config(font=('Segoe script',25,'bold'))
              self.label.pack()
              self.bg = PhotoImage(file = r"C:\Users\2498172\OneDrive - University of Dundee\Second Year\programming\final kevin.png")

              self.canvas1 = Canvas(self.frame14, width = 1100,height = 700)
              self.canvas1.pack(fill = "none", expand = True)
              self.canvas1.create_image( 0, 0, image = self.bg,anchor = "nw")
             


          elif 29<=answer<=32:  #use of conditionals to check if the answers match the following character

             self.frame15 = Frame(self.notebook, width=1300, height=700, bg='#9BCD9B')  #creation of new frame based on whether the condition is satisfied
             self.notebook.add(self.frame15, text='Your Character') #Adds new frame to the notebook and the label of the tab
             self.label = Label(self.frame15, text='You are Cindy Loo Hoo!',bg='#9BCD9B')
             self.label.config(font=('Segoe script',25,'bold'))
             self.label.pack()
             self.bg = PhotoImage(file = r"C:\Users\2498172\OneDrive - University of Dundee\Second Year\programming\final cindy.png")

             self.canvas1 = Canvas(self.frame15, width = 1100,height = 700)
             self.canvas1.pack(fill = "none", expand = True)
             self.canvas1.create_image( 0, 0, image = self.bg,anchor = "nw")
        

          elif answer<8:
             self.frame16 = Frame(self.notebook, width=1300, height=700, bg='#9BCD9B')  #creation of new frame based on whether the condition is satisfied
             self.notebook.add(self.frame16, text=':(') #Adds new frame to the notebook and the label of the tab
             self.label = Label(self.frame16, text='You did not complete the quiz!:(',bg='#9BCD9B')
             self.label.config(font=('Segoe script',25,'bold'))
             self.label.pack()
       
           
             print('YOU DID NOT COMPLETE THE QUIZ :(')  # prints is final total is lower than first conditionals set



      self.widgets['MyButton'] = Button(self.frame9, text='Movies',bg='#FF4040', height=3, width=14,command=lambda:fav('movies'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame9, text='Family',bg='#EEAEEE', height=3, width=14,command=lambda:fav('family'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 
 

      self.widgets['MyButton'] = Button(self.frame9, text='Food', bg='#FFD700', height=3, width=14,command=lambda:fav('food'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame9, text='Gifts', bg='#8EE5EE',height=3, width=14,command=lambda:fav('gifts'))
      self.widgets['MyButton']['font']= f
      self.widgets['MyButton'].pack(padx=10,pady=10)

 

      self.widgets['MyButton'] = Button(self.frame9, text='Submit!', bg='#FFFFFF',height=1, width=8, command= lambda:final(8))
      self.widgets['MyButton']['font']= S
      self.widgets['MyButton'].pack(padx=10,pady=40)
      

              


app = App()

app.mainloop()

